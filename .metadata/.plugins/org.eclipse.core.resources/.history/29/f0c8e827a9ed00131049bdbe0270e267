
package wsClient;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SoapRemoteFileServer", targetNamespace = "http://wsRemoteFileServer/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SoapRemoteFileServer {


    /**
     * 
     * @param arg0
     * @return
     *     returns byte[]
     * @throws NoSuchFileException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFile", targetNamespace = "http://wsRemoteFileServer/", className = "wsClient.GetFile")
    @ResponseWrapper(localName = "getFileResponse", targetNamespace = "http://wsRemoteFileServer/", className = "wsClient.GetFileResponse")
    @Action(input = "http://wsRemoteFileServer/SoapRemoteFileServer/getFileRequest", output = "http://wsRemoteFileServer/SoapRemoteFileServer/getFileResponse", fault = {
        @FaultAction(className = NoSuchFileException_Exception.class, value = "http://wsRemoteFileServer/SoapRemoteFileServer/getFile/Fault/NoSuchFileException")
    })
    public byte[] getFile(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws NoSuchFileException_Exception
    ;

    /**
     * 
     * @param arg0
     * @throws FileAlreadyExistsException_Exception
     * @throws NoSuchPathException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "mkDir", targetNamespace = "http://wsRemoteFileServer/", className = "wsClient.MkDir")
    @ResponseWrapper(localName = "mkDirResponse", targetNamespace = "http://wsRemoteFileServer/", className = "wsClient.MkDirResponse")
    @Action(input = "http://wsRemoteFileServer/SoapRemoteFileServer/mkDirRequest", output = "http://wsRemoteFileServer/SoapRemoteFileServer/mkDirResponse", fault = {
        @FaultAction(className = FileAlreadyExistsException_Exception.class, value = "http://wsRemoteFileServer/SoapRemoteFileServer/mkDir/Fault/FileAlreadyExistsException"),
        @FaultAction(className = NoSuchPathException_Exception.class, value = "http://wsRemoteFileServer/SoapRemoteFileServer/mkDir/Fault/NoSuchPathException")
    })
    public void mkDir(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws FileAlreadyExistsException_Exception, NoSuchPathException_Exception
    ;

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "alive", targetNamespace = "http://wsRemoteFileServer/", className = "wsClient.Alive")
    @ResponseWrapper(localName = "aliveResponse", targetNamespace = "http://wsRemoteFileServer/", className = "wsClient.AliveResponse")
    @Action(input = "http://wsRemoteFileServer/SoapRemoteFileServer/aliveRequest", output = "http://wsRemoteFileServer/SoapRemoteFileServer/aliveResponse")
    public void alive();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws NoSuchPathException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ls", targetNamespace = "http://wsRemoteFileServer/", className = "wsClient.Ls")
    @ResponseWrapper(localName = "lsResponse", targetNamespace = "http://wsRemoteFileServer/", className = "wsClient.LsResponse")
    @Action(input = "http://wsRemoteFileServer/SoapRemoteFileServer/lsRequest", output = "http://wsRemoteFileServer/SoapRemoteFileServer/lsResponse", fault = {
        @FaultAction(className = NoSuchPathException_Exception.class, value = "http://wsRemoteFileServer/SoapRemoteFileServer/ls/Fault/NoSuchPathException")
    })
    public List<String> ls(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws NoSuchPathException_Exception
    ;

    /**
     * 
     * @param arg0
     * @throws NoSuchPathException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "rmDir", targetNamespace = "http://wsRemoteFileServer/", className = "wsClient.RmDir")
    @ResponseWrapper(localName = "rmDirResponse", targetNamespace = "http://wsRemoteFileServer/", className = "wsClient.RmDirResponse")
    @Action(input = "http://wsRemoteFileServer/SoapRemoteFileServer/rmDirRequest", output = "http://wsRemoteFileServer/SoapRemoteFileServer/rmDirResponse", fault = {
        @FaultAction(className = NoSuchPathException_Exception.class, value = "http://wsRemoteFileServer/SoapRemoteFileServer/rmDir/Fault/NoSuchPathException")
    })
    public void rmDir(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws NoSuchPathException_Exception
    ;

    /**
     * 
     * @param arg0
     * @throws NoSuchFileException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "rm", targetNamespace = "http://wsRemoteFileServer/", className = "wsClient.Rm")
    @ResponseWrapper(localName = "rmResponse", targetNamespace = "http://wsRemoteFileServer/", className = "wsClient.RmResponse")
    @Action(input = "http://wsRemoteFileServer/SoapRemoteFileServer/rmRequest", output = "http://wsRemoteFileServer/SoapRemoteFileServer/rmResponse", fault = {
        @FaultAction(className = NoSuchFileException_Exception.class, value = "http://wsRemoteFileServer/SoapRemoteFileServer/rm/Fault/NoSuchFileException")
    })
    public void rm(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws NoSuchFileException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns wsClient.FileInfo
     * @throws NoSuchFileException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAttr", targetNamespace = "http://wsRemoteFileServer/", className = "wsClient.GetAttr")
    @ResponseWrapper(localName = "getAttrResponse", targetNamespace = "http://wsRemoteFileServer/", className = "wsClient.GetAttrResponse")
    @Action(input = "http://wsRemoteFileServer/SoapRemoteFileServer/getAttrRequest", output = "http://wsRemoteFileServer/SoapRemoteFileServer/getAttrResponse", fault = {
        @FaultAction(className = NoSuchFileException_Exception.class, value = "http://wsRemoteFileServer/SoapRemoteFileServer/getAttr/Fault/NoSuchFileException")
    })
    public FileInfo getAttr(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws NoSuchFileException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @throws FileAlreadyExistsException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "putFile", targetNamespace = "http://wsRemoteFileServer/", className = "wsClient.PutFile")
    @ResponseWrapper(localName = "putFileResponse", targetNamespace = "http://wsRemoteFileServer/", className = "wsClient.PutFileResponse")
    @Action(input = "http://wsRemoteFileServer/SoapRemoteFileServer/putFileRequest", output = "http://wsRemoteFileServer/SoapRemoteFileServer/putFileResponse", fault = {
        @FaultAction(className = FileAlreadyExistsException_Exception.class, value = "http://wsRemoteFileServer/SoapRemoteFileServer/putFile/Fault/FileAlreadyExistsException")
    })
    public void putFile(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        byte[] arg1)
        throws FileAlreadyExistsException_Exception
    ;

}
